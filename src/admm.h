#ifndef __ADMM_H
#define __ADMM_H

double update_pois(double c, double mu, int n);
void linear_admm(int M,
                 arma::vec const& y,
                 arma::vec const& x,
                 arma::vec const& w,
                 int n,
                 int ord,
                 arma::vec& theta,
                 arma::vec& z,
                 arma::vec& u,
                 double lambda,
                 double rho,
                 double mu,
                 double tol,
                 int& iter);
Rcpp::List linear_admm_testing(int M,
                               arma::vec const& y,
                               arma::vec const& x,
                               arma::vec const& w,
                               int n,
                               int ord,
                               arma::vec& theta,
                               arma::vec& z,
                               arma::vec& u,
                               double lambda,
                               double rho,
                               double lam_z,
                               double r_norm,
                               double s_norm,
                               Eigen::SparseMatrix<double> const& DD,
                               double tol);

void irls_admm(int& M,
               int n,
               int ord,
               Rcpp::NumericVector const& y,
               Rcpp::NumericVector const& x,
               Rcpp::NumericVector const& w,
               Rcpp::NumericVector& theta,
               Rcpp::NumericVector& z,
               Rcpp::NumericVector& u,
               double lambda,
               double rho,
               double alpha,
               double gamma,
               Eigen::SparseMatrix<double> const& DD,
               double tol,
               int Minner,
               int& iter);
#endif
