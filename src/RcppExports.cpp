// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// admm_testing
List admm_testing(int M, arma::vec const& y, arma::vec const& x, arma::vec const& w, int n, int ord, arma::vec theta, arma::vec z, arma::vec u, double lambda, double rho, double mu, double tol, int iter);
RcppExport SEXP _rtestim_admm_testing(SEXP MSEXP, SEXP ySEXP, SEXP xSEXP, SEXP wSEXP, SEXP nSEXP, SEXP ordSEXP, SEXP thetaSEXP, SEXP zSEXP, SEXP uSEXP, SEXP lambdaSEXP, SEXP rhoSEXP, SEXP muSEXP, SEXP tolSEXP, SEXP iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type ord(ordSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u(uSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    rcpp_result_gen = Rcpp::wrap(admm_testing(M, y, x, w, n, ord, theta, z, u, lambda, rho, mu, tol, iter));
    return rcpp_result_gen;
END_RCPP
}
// admm_gauss
arma::vec admm_gauss(int M, int n, int ord, arma::vec const& y, arma::vec const& x, arma::vec const& w, arma::vec& theta, arma::vec& z, arma::vec& u, double rho, double lam_z, double r_norm, double s_norm, arma::sp_mat const& DD, double tol);
RcppExport SEXP _rtestim_admm_gauss(SEXP MSEXP, SEXP nSEXP, SEXP ordSEXP, SEXP ySEXP, SEXP xSEXP, SEXP wSEXP, SEXP thetaSEXP, SEXP zSEXP, SEXP uSEXP, SEXP rhoSEXP, SEXP lam_zSEXP, SEXP r_normSEXP, SEXP s_normSEXP, SEXP DDSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type ord(ordSEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type u(uSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type lam_z(lam_zSEXP);
    Rcpp::traits::input_parameter< double >::type r_norm(r_normSEXP);
    Rcpp::traits::input_parameter< double >::type s_norm(s_normSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat const& >::type DD(DDSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(admm_gauss(M, n, ord, y, x, w, theta, z, u, rho, lam_z, r_norm, s_norm, DD, tol));
    return rcpp_result_gen;
END_RCPP
}
// dptf
arma::vec dptf(arma::vec y, double lam);
RcppExport SEXP _rtestim_dptf(SEXP ySEXP, SEXP lamSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lam(lamSEXP);
    rcpp_result_gen = Rcpp::wrap(dptf(y, lam));
    return rcpp_result_gen;
END_RCPP
}
// dptf_past
arma::vec dptf_past(arma::vec y, double lam, arma::vec w);
RcppExport SEXP _rtestim_dptf_past(SEXP ySEXP, SEXP lamSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lam(lamSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(dptf_past(y, lam, w));
    return rcpp_result_gen;
END_RCPP
}
// rtestim_path
List rtestim_path(int algo, arma::vec y, arma::vec x, arma::vec w, int korder, arma::vec lambda, double lambdamax, double lambdamin, int nsol, double rho, int maxiter, double tolerance, double lambda_min_ratio, double ls_alpha, double ls_gamma, int verbose);
RcppExport SEXP _rtestim_rtestim_path(SEXP algoSEXP, SEXP ySEXP, SEXP xSEXP, SEXP wSEXP, SEXP korderSEXP, SEXP lambdaSEXP, SEXP lambdamaxSEXP, SEXP lambdaminSEXP, SEXP nsolSEXP, SEXP rhoSEXP, SEXP maxiterSEXP, SEXP toleranceSEXP, SEXP lambda_min_ratioSEXP, SEXP ls_alphaSEXP, SEXP ls_gammaSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type algo(algoSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type korder(korderSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type lambdamax(lambdamaxSEXP);
    Rcpp::traits::input_parameter< double >::type lambdamin(lambdaminSEXP);
    Rcpp::traits::input_parameter< int >::type nsol(nsolSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_min_ratio(lambda_min_ratioSEXP);
    Rcpp::traits::input_parameter< double >::type ls_alpha(ls_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type ls_gamma(ls_gammaSEXP);
    Rcpp::traits::input_parameter< int >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(rtestim_path(algo, y, x, w, korder, lambda, lambdamax, lambdamin, nsol, rho, maxiter, tolerance, lambda_min_ratio, ls_alpha, ls_gamma, verbose));
    return rcpp_result_gen;
END_RCPP
}
// buildD
arma::sp_mat buildD(int n, int ord);
RcppExport SEXP _rtestim_buildD(SEXP nSEXP, SEXP ordSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type ord(ordSEXP);
    rcpp_result_gen = Rcpp::wrap(buildD(n, ord));
    return rcpp_result_gen;
END_RCPP
}
// buildDx
arma::sp_mat buildDx(int n, int ord, const arma::vec& x);
RcppExport SEXP _rtestim_buildDx(SEXP nSEXP, SEXP ordSEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type ord(ordSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(buildDx(n, ord, x));
    return rcpp_result_gen;
END_RCPP
}
// buildDx_tilde
arma::sp_mat buildDx_tilde(int n, int ord, const arma::vec& x);
RcppExport SEXP _rtestim_buildDx_tilde(SEXP nSEXP, SEXP ordSEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type ord(ordSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(buildDx_tilde(n, ord, x));
    return rcpp_result_gen;
END_RCPP
}
// create_lambda_test
arma::vec create_lambda_test(arma::vec lambda, double lambdamin, double lambdamax, double lambda_min_ratio, int nsol);
RcppExport SEXP _rtestim_create_lambda_test(SEXP lambdaSEXP, SEXP lambdaminSEXP, SEXP lambdamaxSEXP, SEXP lambda_min_ratioSEXP, SEXP nsolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type lambdamin(lambdaminSEXP);
    Rcpp::traits::input_parameter< double >::type lambdamax(lambdamaxSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_min_ratio(lambda_min_ratioSEXP);
    Rcpp::traits::input_parameter< int >::type nsol(nsolSEXP);
    rcpp_result_gen = Rcpp::wrap(create_lambda_test(lambda, lambdamin, lambdamax, lambda_min_ratio, nsol));
    return rcpp_result_gen;
END_RCPP
}
// gaussianized_data
arma::vec gaussianized_data(arma::vec const& y, arma::vec const& w, arma::vec& theta);
RcppExport SEXP _rtestim_gaussianized_data(SEXP ySEXP, SEXP wSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec const& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(gaussianized_data(y, w, theta));
    return rcpp_result_gen;
END_RCPP
}
// line_search
double line_search(double s, double lambda, double alpha, double gamma, arma::vec const& y, arma::vec const& x, arma::vec const& w, int n, int ord, arma::vec& theta, arma::vec& theta_old, arma::vec& c1, arma::vec& c2, int M);
RcppExport SEXP _rtestim_line_search(SEXP sSEXP, SEXP lambdaSEXP, SEXP alphaSEXP, SEXP gammaSEXP, SEXP ySEXP, SEXP xSEXP, SEXP wSEXP, SEXP nSEXP, SEXP ordSEXP, SEXP thetaSEXP, SEXP theta_oldSEXP, SEXP c1SEXP, SEXP c2SEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type s(sSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type ord(ordSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type theta_old(theta_oldSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type c1(c1SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type c2(c2SEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(line_search(s, lambda, alpha, gamma, y, x, w, n, ord, theta, theta_old, c1, c2, M));
    return rcpp_result_gen;
END_RCPP
}
// calcDvline_slow
arma::vec calcDvline_slow(int n, int ord, arma::vec const& x, arma::vec& v, arma::vec& b);
RcppExport SEXP _rtestim_calcDvline_slow(SEXP nSEXP, SEXP ordSEXP, SEXP xSEXP, SEXP vSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type ord(ordSEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type v(vSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(calcDvline_slow(n, ord, x, v, b));
    return rcpp_result_gen;
END_RCPP
}
// calcDTvline_slow
arma::vec calcDTvline_slow(int n, int ord, arma::vec const& x, arma::vec& v, arma::vec& b);
RcppExport SEXP _rtestim_calcDTvline_slow(SEXP nSEXP, SEXP ordSEXP, SEXP xSEXP, SEXP vSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type ord(ordSEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type v(vSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(calcDTvline_slow(n, ord, x, v, b));
    return rcpp_result_gen;
END_RCPP
}
// calcDTDvline_slow
arma::vec calcDTDvline_slow(int n, int ord, arma::vec const& x, arma::vec& v, arma::vec& b);
RcppExport SEXP _rtestim_calcDTDvline_slow(SEXP nSEXP, SEXP ordSEXP, SEXP xSEXP, SEXP vSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type ord(ordSEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type v(vSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(calcDTDvline_slow(n, ord, x, v, b));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rtestim_admm_testing", (DL_FUNC) &_rtestim_admm_testing, 14},
    {"_rtestim_admm_gauss", (DL_FUNC) &_rtestim_admm_gauss, 15},
    {"_rtestim_dptf", (DL_FUNC) &_rtestim_dptf, 2},
    {"_rtestim_dptf_past", (DL_FUNC) &_rtestim_dptf_past, 3},
    {"_rtestim_rtestim_path", (DL_FUNC) &_rtestim_rtestim_path, 16},
    {"_rtestim_buildD", (DL_FUNC) &_rtestim_buildD, 2},
    {"_rtestim_buildDx", (DL_FUNC) &_rtestim_buildDx, 3},
    {"_rtestim_buildDx_tilde", (DL_FUNC) &_rtestim_buildDx_tilde, 3},
    {"_rtestim_create_lambda_test", (DL_FUNC) &_rtestim_create_lambda_test, 5},
    {"_rtestim_gaussianized_data", (DL_FUNC) &_rtestim_gaussianized_data, 3},
    {"_rtestim_line_search", (DL_FUNC) &_rtestim_line_search, 14},
    {"_rtestim_calcDvline_slow", (DL_FUNC) &_rtestim_calcDvline_slow, 5},
    {"_rtestim_calcDTvline_slow", (DL_FUNC) &_rtestim_calcDTvline_slow, 5},
    {"_rtestim_calcDTDvline_slow", (DL_FUNC) &_rtestim_calcDTDvline_slow, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_rtestim(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
